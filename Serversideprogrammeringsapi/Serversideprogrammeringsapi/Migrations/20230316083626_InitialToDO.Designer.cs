// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Serversideprogrammeringsapi.Database;

#nullable disable

namespace Serversideprogrammeringsapi.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    [Migration("20230316083626_InitialToDO")]
    partial class InitialToDO
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Serversideprogrammeringsapi.Database.Models.ToDoListIteam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("DataDescription")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("DataName")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTimeOffset?>("Disabled")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("IVDescription")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("IVName")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ToDoListId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListId");

                    b.ToTable("ToDoListIteams");
                });

            modelBuilder.Entity("Serversideprogrammeringsapi.Database.Models.ToDoLists", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("DataDescription")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("DataName")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTimeOffset?>("Disabled")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("IVDescription")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("IVName")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ToDoLists");
                });

            modelBuilder.Entity("Serversideprogrammeringsapi.Database.Models.ToDoListIteam", b =>
                {
                    b.HasOne("Serversideprogrammeringsapi.Database.Models.ToDoLists", "ToDoList")
                        .WithMany("ListItems")
                        .HasForeignKey("ToDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoList");
                });

            modelBuilder.Entity("Serversideprogrammeringsapi.Database.Models.ToDoLists", b =>
                {
                    b.Navigation("ListItems");
                });
#pragma warning restore 612, 618
        }
    }
}
